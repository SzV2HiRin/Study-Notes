所谓死锁：指的就是线程1占用A锁需要得到B锁，线程2占用B锁需要得到A锁，他俩都想获取对方的锁而不释放自己的锁，就会产生死锁
可以通过jps -l查到程序的pid，通过jstack pid 进行查看
产生死锁的条件：
一：互斥条件：一个资源一次只能被一个线程访问，不能被2个及以上的线程占用
二：请求与保持条件：一个线程因请求资源而被阻塞，对已获得的资源保持不放
三：剥夺条件：线程已获取的资源不能强制剥夺，只能等待自动释放
四：循环等待条件：若干资源形成头尾相连的循环等待关系
破坏死锁的条件（破坏其中一个就够了）
①：破坏互斥条件 ：这个条件我们没有办法破坏，因为我们用锁本来就是想让他们互斥的（临界资源需要互斥访问）。
②：破坏请求与保持条件 ：一次性申请所有的资源。
③：破坏不剥夺条件 ：占用部分资源的线程进一步申请其他资源时，如果申请不到，可以主动释放它占有的资源。
④：破坏循环等待条件 ：靠按序申请资源来预防。按某一顺序申请资源，释放资源则反序释放。破坏循环等待条件。
解决方法：银行家算法